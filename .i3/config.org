#+TITLE: I3Config
#+PROPERTY: header-args :tangle config

* Util

** Generate

Click this link to (re)-generate

[[elisp:(org-babel-tangle)][Generate]]

** Header

#+BEGIN_SRC sh
# This file has been generated by org-mode
# Dont edit by hand if you intend to regenerate it
# Consult config.org
#+END_SRC

* Source

** Mod key

The Mod key is set to Mod3 which is in my case rebound to CapsLock for conveignance

- [ ] insert link to xinit config

#+BEGIN_SRC sh
set $mod Mod3
#+END_SRC

** Colors

#+BEGIN_SRC sh
set $back               #1d1F21
set $black              #282A2E
set $grey               #373B41
set $lightgrey          #707880
set $white              #C5C8C6
set $yellow             #F0C674
set $red                #cc2925
set $orange             #ffb86c
set $darkred            #A54242
set $green              #B5BD56

#class                  border      backgr.     text        split
client.focused          $red        $darkred    $black      $red
client.focused_inactive $grey       $grey       $lightgrey  $grey
client.unfocused        $grey       $grey       $lightgrey  $grey
client.urgent           $red        $grey       $black      $red
client.background       $back
#+END_SRC

** Fonts

*** System setup

- [ ] Put this in xinit and refactor for easy font add


#+BEGIN_SRC sh
exec xset fp+ $HOME/.fonts/misc
exec xset fp+ $HOME/.fonts/ohsnap
exec xset fp+ $HOME/.fonts/terminesspowerline
exec xset fp rehash
#+END_SRC

*** Font setup

This needs to have the FontAwesome installed

#+BEGIN_SRC sh
font pango:DejaVu Sans Mono, FontAwesome 8
#+END_SRC

** Bar

#+BEGIN_SRC sh
bar {
    font pango:DejaVu Sans Mono, FontAwesome 6
    position top
    height 10
    status_command /usr/bin/i3status-rs ~/.i3/status_config.toml
    separator_symbol "î‚°"
    colors {
        separator #A54242
        background #222222
        statusline #dddddd
        focused_workspace #A54242 #A54242 #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
}
#+END_SRC

#+RESULTS:

** Launcher

#+BEGIN_SRC sh
bindsym $mod+space exec dmenu_run -h 8 -p Open -nb "#232427"
#+END_SRC

** Scratchpad

Make the currently focused window a scratchpad

#+BEGIN_SRC sh
bindsym $mod+Shift+s move scratchpad
#+END_SRC

Show the terminal scratchpad window

#+BEGIN_SRC sh
bindsym $mod+Tab scratchpad show
#+END_SRC

Show the auryo scratchpad window

#+BEGIN_SRC sh
bindsym $mod+s [instance="auryo"] scratchpad show
#+END_SRC

Show the rambox scratchpad window

#+BEGIN_SRC sh
bindsym $mod+m [instance="rambox"] scratchpad show
#+END_SRC

** Workspaces

*** Switch to workspace

#+BEGIN_SRC sh
bindsym $mod+1 workspace 1:>_
bindsym $mod+2 workspace 2:fn
bindsym $mod+3 workspace 3:www
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
#+END_SRC

*** Move focused container to workspace

#+BEGIN_SRC sh
bindsym $mod+Shift+1 move container to workspace 1:>_
bindsym $mod+Shift+2 move container to workspace 2:fn
bindsym $mod+Shift+3 move container to workspace 3:www
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
#+END_SRC

*** Assign to screen output

#+BEGIN_SRC sh
workspace 1:>_ output eDP1
workspace 2:fn  output DP2
workspace 3:www output HDMI1
#+END_SRC

*** Navigation

#+BEGIN_SRC sh
bindsym Ctrl+$mod+l workspace next
bindsym Ctrl+$mod+h workspace prev
#+END_SRC

** Layout

*** Focus

**** Change focus

#+BEGIN_SRC sh
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
#+END_SRC

**** Alternatively, you can use the cursor keys:

#+BEGIN_SRC sh
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right
#+END_SRC

**** Move focused window
#+BEGIN_SRC sh
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
#+END_SRC

**** Alternatively, you can use the cursor keys:

#+BEGIN_SRC sh
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right
#+END_SRC

**** Tiling

#+BEGIN_SRC sh
# change focus between tiling / floating windows
bindsym $mod+Shift+t focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
#+END_SRC

*** Split

- [ ] Restore change split with h and v

#+BEGIN_SRC sh
# split in horizontal orientation and spawn a term
bindsym $mod+x split h, exec konsole

# split in vertical orientation and spawn a term
bindsym $mod+z split v, exec konsole

# split in horizontal orientation and spawn a vim
bindsym $mod+Shift+x split h

# split in vertical orientation and spawn a vim
bindsym $mod+Shift+z split v


# change split in horizontal orientation
#bindsym $mod+h split h

# change split in vertical orientation
#bindsym $mod+v split v
#+END_SRC

*** Orientation

#+BEGIN_SRC sh
default_orientation horizontal
#+END_SRC

*** Floating

**** Drag

Use Mouse+$mod to drag floating windows to their wanted position

#+BEGIN_SRC sh
floating_modifier $mod
#+END_SRC

**** Toggle tiling/floating

#+BEGIN_SRC sh
bindsym $mod+Shift+space floating toggle
#+END_SRC

*** Resize

Live resize

#+BEGIN_SRC sh
#bindsym $mod+Mod1+Left resize shrink width 1 px or 1 ppt
#bindsym $mod+Mod1+Down resize grow height 1 px or 1 ppt
#bindsym $mod+Mod1+Up resize shrink height 1 px or 1 ppt
#bindsym $mod+Mod1+Right resize grow width 1 px or 1 ppt

bindsym $mod+Mod1+h resize shrink width 1 px or 1 ppt
bindsym $mod+Mod1+j resize grow height 1 px or 1 ppt
bindsym $mod+Mod1+k resize shrink height 1 px or 1 ppt
bindsym $mod+Mod1+l resize grow width 1 px or 1 ppt
#+END_SRC

** I3 Commands

*** Reload

#+BEGIN_SRC sh
bindsym $mod+Shift+c reload
#+END_SRC

*** Restart

Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)

#+BEGIN_SRC sh
bindsym $mod+Shift+r restart
#+END_SRC

*** Exit

Exit i3 (logs you out of your X session)

#+BEGIN_SRC sh
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'pkill lemonbar; i3-msg exit'"
#+END_SRC

** I3-Gaps

*** Smart borders

#+BEGIN_SRC sh
smart_borders on
#+END_SRC

*** Outer gaps

#+BEGIN_SRC sh
gaps outer 0
#+END_SRC

*** Modes

#+BEGIN_SRC sh
# Necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 1

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
#+END_SRC

** Mark and Goto

*** Mark

Read 1 character and mark the current window with this character

#+BEGIN_SRC sh
bindsym $mod+Shift+m exec i3-input -F 'mark %s' -l 1 -P 'Mark: '
#+END_SRC

*** Goto

Read 1 character and go to the window with the character

#+BEGIN_SRC sh
bindsym $mod+g exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '
#+END_SRC

** X11

*** Keybindings

**** Volume

#+BEGIN_SRC sh
# Volume keys
bindsym XF86AudioRaiseVolume exec amixer -q set Master 5%+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 5%- unmute
bindsym XF86AudioMute exec amixer -q set Master mute
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#+END_SRC

**** Brightness keys

#+BEGIN_SRC sh
bindsym XF86MonBrightnessUp exec intelbacklight -inc 200 # increase screen brightness
bindsym XF86MonBrightnessDown exec intelbacklight -dec 200 # decrease screen brightness
#+END_SRC

**** Brightness Min and Max

#+BEGIN_SRC sh
bindsym Shift+XF86MonBrightnessUp exec intelbacklight -set 1500 # increase screen brightness
bindsym Shift+XF86MonBrightnessDown exec intelbacklight -set 1 # decrease screen brightness
#+END_SRC

*** Screen output

#+BEGIN_SRC sh
exec_always xrandr --output HDMI-1 --auto --right-of eDP-1
exec_always xrandr --output DP-2 --auto --right-of DP-2
#+END_SRC

** Raise or Launch

#+BEGIN_SRC sh
bindsym $mod+b exec --no-startup-id raiseorlaunch -s brave
bindsym $mod+n exec --no-startup-id raiseorlaunch -s emacs
bindsym $mod+p exec --no-startup-id raiseorlaunch -s scrcpy
bindsym $mod+Shift+v exec --no-startup-id raiseorlaunch -s vlc
# bindsym $mod+v exec --no-startup-id raiseorlaunch -s nvim
#+END_SRC

** Borders

#+BEGIN_SRC sh
default_border pixel 1
default_floating_border pixel 1
#+END_SRC
** Autolock

#+BEGIN_SRC sh
exec --no-startup-id xautolock -detectsleep -secure -time 30 -locker "i3lock-fancy" \
    -notify 20 -notifier "notify-send -u critical -t 10000 -- 'LOCKING screen in 20 seconds'"
#+END_SRC

* To Dispatch

#+BEGIN_SRC sh
### TO DISPATCH

mouse_warping none

popup_during_fullscreen smart
workspace_auto_back_and_forth yes

# start a terminal
bindsym $mod+Return exec konsole

# kill focused window
bindsym $mod+Shift+q kill


# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+w layout stacking
# bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split



# focus the child container
#bindsym $mod+d focus child

# WMFocus
# bindsym $mod+Tab exec ~/.cargo/bin/wmfocus
bindsym $mod+d exec --no-startup-id konsole --profile 'floating' -e 'i3-dmenu-desktop --dmenu=fzf'
for_window [title="~ : i3-dmenu-deskto"] floating enable
# for_window [title="scratchpad"] move scratchpad



# Background
#exec feh --bg-scale ~/pictures/wall_code.jpg
#exec feh --bg-scale ~/pictures/wall2.jpg
#exec feh --bg-scale ~/pictures/wall3.jpg
# exec feh --bg-scale ~/pictures/wall4.jpg
exec feh --bg-scale ~/pictures/wall_new.jpeg

# Lock
bindsym Control+Mod1+l exec i3lock-fancy

# Compositor
exec --no-startup-id picom


# Touchpad toggler
bindsym $mod+t exec --no-startup-id ~/.i3/toggle_touchpad.sh


# Touchpad gesture
exec libinput-gestures

# Albert demon
# exec albert


bindsym $mod+Shift+Ctrl+0 exec xrandr --output HDMI-1 --off && xrandr --output DP-2 --off && pkill lemonbar && exec lemonbar




# Screenshot
bindsym Print exec scrot '%Y-%m-%d-%s_screenshot_$wx$h.jpg' -e 'mv $f ~/pictures/'

bindsym --release $mod+h exec --no-startup-id "i3-vim-nav h"
bindsym --release $mod+j exec --no-startup-id "i3-vim-nav j"
bindsym --release $mod+k exec --no-startup-id "i3-vim-nav k"
bindsym --release $mod+l exec --no-startup-id "i3-vim-nav l"

#Default assignations
assign [title="^first"] number 1
assign [class="emacs"] number 2
assign [class="brave-browser"] number 3

exec --no-startup-id konsole -e zsh -c 'echo -ne "\033]30;scratchpad\007"; zsh'
# exec --no-startup-id emacs

# for_window [title="emacs@arch"] move scratchpad

# exec --no-startup-id konsole -e zsh -c 'echo -ne "\033]30;first\007"; zsh'
# exec --no-startup-id emacs
# exec --no-startup-id brave

#+END_SRC
